// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Request {
  id        String   @id @default(uuid())
  csvFile   String
  requestId String   @unique
  processedImages Int      @default(0)
  status    RequestStatus @default(EXTRACTION_IN_PROGRESS)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  ProductRequestMapping[]
}

model Product {
  id        String   @id @default(uuid()) 
  productId String   @unique 
  createdAt DateTime @default(now())
  images    ProductImageMapping[]
  requests  ProductRequestMapping[]
}
model ProductRequestMapping {
  id        String   @id @default(uuid())
  requestId String
  request   Request  @relation(fields: [requestId], references: [requestId], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)

  @@unique([requestId, productId])
}

model ProductImageMapping {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
  imageId   String
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
}

model Image {
  id        String   @id @default(uuid())
  inputUrl  String   @unique
  status    ImageStatus @default(PENDING)
  outputUrl String?
  createdAt     DateTime @default(now())
  productImages ProductImageMapping[]
}

enum RequestStatus {
  EXTRACTION_IN_PROGRESS
  EXTRACTION_COMPLETED
  IMAGE_PROCESSING_IN_PROGRESS
  IMAGE_PROCESSING_COMPLETED
  FAILED
}

enum ImageStatus {
  PENDING
  PROCESSED
  FAILED
}
